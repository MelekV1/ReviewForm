{"ast":null,"code":"var _jsxFileName = \"A:\\\\user\\\\Learning Assets\\\\ReactJS\\\\alphaproject\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; //they assume u import js file\n\n/**bootstrap**/\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 2000));\n}\n\nfunction LoadingButton() {\n  const [isLoading, setLoading] = useState(false);\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"sucess\",\n    disabled: isLoading,\n    onClick: !isLoading ? handleClick : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, isLoading ? 'Loading…' : 'Click to submit');\n}\n\nrender( /*#__PURE__*/React.createElement(LoadingButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 8\n  }\n}));\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["A:/user/Learning Assets/ReactJS/alphaproject/src/index.js"],"names":["React","ReactDOM","App","Button","Form","Spinner","simulateNetworkRequest","Promise","resolve","setTimeout","LoadingButton","isLoading","setLoading","useState","useEffect","then","handleClick","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CAAwB;;AAExB;;AACA,OAAO,kCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,sBAAT,GAAkC;AAChC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAnC,CAAP;AACD;;AAED,SAASE,aAAT,GAAyB;AACvB,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIH,SAAJ,EAAe;AACbL,MAAAA,sBAAsB,GAAGS,IAAzB,CAA8B,MAAM;AAClCH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFD;AAGD;AACF,GANQ,EAMN,CAACD,SAAD,CANM,CAAT;;AAQA,QAAMK,WAAW,GAAG,MAAMJ,UAAU,CAAC,IAAD,CAApC;;AAEA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,QADV;AAEE,IAAA,QAAQ,EAAED,SAFZ;AAGE,IAAA,OAAO,EAAE,CAACA,SAAD,GAAaK,WAAb,GAA2B,IAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGL,SAAS,GAAG,UAAH,GAAgB,iBAL5B,CADF;AASD;;AAEDM,MAAM,eAAC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,CAAN;AAEAhB,QAAQ,CAACgB,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';//they assume u import js file\n\n/**bootstrap**/\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\n\nfunction simulateNetworkRequest() {\n  return new Promise((resolve) => setTimeout(resolve, 2000));\n}\n\nfunction LoadingButton() {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  const handleClick = () => setLoading(true);\n\n  return (\n    <Button\n      variant=\"sucess\"\n      disabled={isLoading}\n      onClick={!isLoading ? handleClick : null}\n    >\n      {isLoading ? 'Loading…' : 'Click to submit'}\n    </Button>\n  );\n}\n\nrender(<LoadingButton />);\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}